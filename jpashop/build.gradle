plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// lombok 관련해서 생긴 세팅
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools' // restartedMain으로 뜬다. 파일들에 대해 캐싱을 다 하지 않는다. 재시작 안하고 재컴파일만 하면 변경사항이 적용된다.
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// 스프링 관련된 라이브러리들은 스프링 부트가 알아서 해주니까 버전 안 써도 되는 거고

	// 외부 라이브러리는 그렇지 않기 떄문에 버전을 명시해 줘야 한다.
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    // 파라미터 바인딩 된 거 출력해준다.
	// 하지만 이런 라이브러리들은 개발 단계에서는 편한데 운영할 땐 고민을 해봐야 한다. 성능 테스트가 필요하다.
	// 성능을 저하시키는 병목이 될 수 있기 때문이다.

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	// 웬만한 라이브러리들은 스프링부트가 최적화된 버전을 알고 있어서 이에 맞게 알아서 해준다.
	// 그래서 버전 생략 가능
	// 하이버네이트가 만든 프록시 객체를 JSON으로 읽을 수 있도록 도와주는 역할.
	//	기본적으로 초기화 된 프록시 객체만 노출, 초기화 되지 않은 프록시 객체는 노출 안함

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

